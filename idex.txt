<div class="container-fluid">
                    <div class="d-sm-flex justify-content-between align-items-center mb-4"></div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-lg-6 mb-4">
                                    <div class="card text-white bg-primary shadow">
                                        <div class="card-body">
                                            <p class="m-0">Primary</p>
                                            <p class="text-white-50 small m-0">#4e73df</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 mb-4">
                                    <div class="card text-white bg-success shadow">
                                        <div class="card-body">
                                            <p class="m-0">Success</p>
                                            <p class="text-white-50 small m-0">#1cc88a</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 mb-4">
                                    <div class="card text-white bg-info shadow">
                                        <div class="card-body">
                                            <p class="m-0">Info</p>
                                            <p class="text-white-50 small m-0">#36b9cc</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 mb-4">
                                    <div class="card text-white bg-warning shadow">
                                        <div class="card-body">
                                            <p class="m-0">Warning</p>
                                            <p class="text-white-50 small m-0">#f6c23e</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 mb-4">
                                    <div class="card text-white bg-danger shadow">
                                        <div class="card-body">
                                            <p class="m-0">Danger</p>
                                            <p class="text-white-50 small m-0">#e74a3b</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 mb-4">
                                    <div class="card text-white bg-secondary shadow">
                                        <div class="card-body">
                                            <p class="m-0">Secondary</p>
                                            <p class="text-white-50 small m-0">#858796</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>












                <form method="POST" enctype="multipart/form-data">
                    {% csrf_token %}
                    <input type="file" name="file">
                    <br>
                    <input type="submit">
                </form>
















                # if Sales.objects.filter().exits():
                        #     Sales.objects.bulk_create(objs)

                        # else:
                        #     Sales.objects.bulk_create(objs)

                        # sales,created=Sales.objects.get_or_create(objs)
                        # print(sales)
                        # print(created)
                        # Sales.save()

code to generate keplergl and add it to media folder
# df=pd.read_csv(obj.file.path)

                # map_yt={'version': 'v1', 'config': {'visState': {'filters': [], 'layers': [{'id': '61hdpp8', 'type': 'geojson', 'config': {'dataId': 'Data', 'label': 'Data', 'color': [179, 173, 158], 'columns': {'geojson': 'Polygon'}, 'isVisible': True, 'visConfig': {'opacity': 0.8, 'strokeOpacity': 0.8, 'thickness': 0.5, 'strokeColor': [18, 147, 154], 'colorRange': {'name': 'Uber Viz Diverging 1.5', 'type': 'diverging', 'category': 'Uber', 'colors': ['#00939C', '#5DBABF', '#BAE1E2', '#F8C0AA', '#DD7755', '#C22E00']}, 'strokeColorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'radius': 10, 'sizeRange': [0, 10], 'radiusRange': [0, 50], 'heightRange': [0, 500], 'elevationScale': 5, 'enableElevationZoomFactor': True, 'stroked': False, 'filled': True, 'enable3d': False, 'wireframe': False}, 'hidden': False, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': {'name': 'Voice Affected Users', 'type': 'integer'}, 'colorScale': 'quantile', 'strokeColorField': None, 'strokeColorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear', 'heightField': None, 'heightScale': 'linear', 'radiusField': None, 'radiusScale': 'linear'}}, {'id': 'tncz8r', 'type': 'point', 'config': {'dataId': 'Point', 'label': 'Point', 'color': [25, 20, 16], 'columns': {'lat': 'lat', 'lng': 'lon', 'altitude': None}, 'isVisible': True, 'visConfig': {'radius': 12.9, 'fixedRadius': False, 'opacity': 0.8, 'outline': False, 'thickness': 2, 'strokeColor': None, 'colorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'strokeColorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'radiusRange': [0, 50], 'filled': True}, 'hidden': False, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': None, 'colorScale': 'quantile', 'strokeColorField': None, 'strokeColorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear'}}], 'interactionConfig': {'tooltip': {'fieldsToShow': {'Data': [{'name': 'Circle', 'format': None}, {'name': 'City', 'format': None}, {'name': 'Component', 'format': None}, {'name': 'Date', 'format': None}, {'name': 'Hour', 'format': None}], 'Point': [{'name': 'Component', 'format': None}, {'name': 'Circle', 'format': None}, {'name': 'City', 'format': None}]}, 'compareMode': False, 'compareType': 'absolute', 'enabled': True}, 'brush': {'size': 0.5, 'enabled': False}, 'geocoder': {'enabled': False}, 'coordinate': {'enabled': False}}, 'layerBlending': 'normal', 'splitMaps': [], 'animationConfig': {'currentTime': None, 'speed': 1}}, 'mapState': {'bearing': 0, 'dragRotate': False, 'latitude': 21.13187210920387, 'longitude': 72.84256936234655, 'pitch': 0, 'zoom': 10.398997018768425, 'isSplit': False}, 'mapStyle': {'styleType': 'light', 'topLayerGroups': {}, 'visibleLayerGroups': {'label': True, 'road': True, 'border': False, 'building': True, 'water': True, 'land': True, '3d building': False}, 'threeDBuildingColor': [218.82023004728686, 223.47597962276103, 223.47597962276103], 'mapStyles': {}}}}

                # showtime = datetime.datetime.now().strftime ("%Y_%m_%d")
                # # showtime = datetime.datetime.now().strftime ("%Y%m%d")
                
                # merge_df=df.iloc[:,:-2]
                # point=df.iloc[:,:3]
                # position=df.iloc[:,-2:]
                # point_df = pd.concat([point, position], axis=1, join='inner')
                # map_dual = KeplerGl(height=700)
                # map_dual.save_to_html(data={'Data': merge_df,'Point':point_df},file_name=f'media/India_Kepler_{showtime}.html',config=map_yt)




                # form=FileForm()

                # if request.method=="POST":
                #     mydata=FileForm(request.POST,request.FILES)
                #     if mydata.is_valid():
                #         x=mydata.save(commit=False)
                #         x.user_name=request.user
                #         x.file=os.path.basename(f"India_Kepler_{showtime}.html")
                #         x.save()



































<div style="margin-left: 40%;">
    <form action="{% url 'filter' %}" method="POST" style="max-width: 400px; " enctype="multipart/form-data">
        {% csrf_token %}
        <input type="submit" value="M" name="City">City|
        <p>Apply the below filters.</p>
        <table border="1">
            <tr>
                <th>Circle</th>                              
                <th>City</th>                                
                <th>Component</th>                           
                <th>Date</th>                                
                <th>Hour</th>                                 
                <th>Total Customers</th>                          
                <th>Ratio Data</th>                           
                <th>Ratio Voice</th>                          
                <th> HSI</th>                            
                <th>cluster_issue</th>                       
                <th>Data Volume</th>                          
                <th>Data Volume Formula</th>                
                <th>Data Volume mean</th>                     
                <th>Data Volume std</th>                    
                <th>Voice Affected Users</th>                 
                <th>Voice Affected Users Formula</th>       
                <th>Voice Affected Users mean</th>            
                <th>Voice Affected Users std</th>           
                <th>HSI Affected Users</th>                   
                <th>HSI Affected Users Formula</th>         
                <th>HSI Affected Users mean</th>              
                <th>HSI Affected Users std</th>             
                <th>Data % Change</th>                      
                <th>Voice % Change</th>                     
                <th>HSI % Change</th>                       
                <th>num_grids</th>                            
                <th>num_cells</th>                            
                <th>num_sectors</th>                          
                <th>Indoor Freqency % 850</th>              
                <th>Indoor Freqency % 1800</th>             
                <th>Indoor Freqency % 2300</th>             
                <th>prb_20</th>                             
                <th>prb_70_90</th>                          
                <th>prb_90</th>                            
                <th>prb_20_per</th>                         
                <th>prb_70_90_per</th>                     
                <th>prb_90_per</th>                       
                <th>area</th>                              
                <th>month</th>                                
                <th>week</th>                               
                <th>total_users_data_complaints </th>         
                <th>total_users_vvm_complaints</th>           
                <th>total_users_covergae_complaints</th>     
                <th>total_users_other_complaints</th>        
                <th>totla_upc_generated</th>               
                <th>Polygon</th>                            
                <th>lat</th>                                
                <th>lon</th>
            </tr>
            {% for i in FilterValue %}
            <tr>
                <td>{{i.Circle}}</td>
                <td>{{i.Component}}</td>                           
                <td>{{i.Date}}</td>                                
                <td>{{i.Hour}}</td>                                 
                <td>{{i.Total Customers}}</td>                          
                <td>{{i.Ratio Data}}</td>                           
                <td>{{i.Ratio }}</td>                          
                <td>{{i.HSI}}</td>                            
                <td>{{i.cluster_issue}}</td>                       
                <td>{{i.Data Volume}}</td>                          
                <td>{{i.Data Volume Formula}}</td>                
                <td>{{i.Data Volume mean}}</td>                     
                <td>{{i.Data Volume std}}</td>                    
                <td>{{i.Voice Affected Users}}</td>                 
                <td>{{i.Voice Affected Users Formula}}</td>       
                <td>{{i.Voice Affected Users mean}}</td>            
                <td>{{i.Voice Affected Users std}}</td>           
                <td>{{i.HSI Affected Users}}</td>                   
                <td>{{i.HSI Affected Users Formula}}</td>         
                <td>{{i.HSI Affected Users mean}}</td>              
                <td>{{i.HSI Affected Users std}}</td>             
                <td>{{i.Data % Change}}</td>                      
                <td>{{i.Voice % Change}}</td>                     
                <td>{{i.HSI % Change}}</td>                       
                <td>{{i.num_grids}}</th>                            
                <td>{{i.num_cells}}</td>                            
                <td>{{i.num_sectors}}</td>                          
                <td>{{i.Indoor Freqency % 850}}</td>              
                <td>{{i.Indoor Freqency % 1800}}</td>             
                <td>{{i.Indoor Freqency % 2300}}</td>             
                <td>{{i.prb_20}}</td>                             
                <td>{{i.prb_70_90}}</td>                          
                <td>{{i.prb_90}}</td>                            
                <td>{{i.prb_20_per}}</td>                         
                <td>{{i.prb_70_90_per}}</td>                     
                <td>{{i.prb_90_per}}</td>                       
                <td>{{i.area}}</td>                              
                <td>{{i.month}}</td>                                
                <td>{{i.week}}</td>                               
                <td>{{i.total_users_data_complaints}}</td>         
                <td>{{i.total_users_vvm_complaints}}</td>           
                <td>{{i.total_users_other_complaints}}</td>        
                <td>{{i.totla_upc_generated}}</td>               
                <td>{{i.Polygon}}</td>                            
                <td>{{i.lat}}</td>                                
                <td>{{i.lon}}</td>
            </tr>
            {% end for%}
        </table>
        <br>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>